//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v3.0.4.7
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace DOS_DAL
{
   /// <summary>
   /// Model for Product.
   /// </summary>
   [System.ComponentModel.Description("Model for Product.")]
   public partial class Product
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected Product()
      {
         Processes = new System.Collections.Generic.HashSet<global::DOS_DAL.Process>();

         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static Product CreateProductUnsafe()
      {
         return new Product();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="name">Name of Product.</param>
      /// <param name="isdeleted">Soft deleted flag.</param>
      public Product(string name, bool isdeleted)
      {
         if (string.IsNullOrEmpty(name)) throw new ArgumentNullException(nameof(name));
         this.Name = name;

         this.IsDeleted = isdeleted;

         this.Processes = new System.Collections.Generic.HashSet<global::DOS_DAL.Process>();
         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="name">Name of Product.</param>
      /// <param name="isdeleted">Soft deleted flag.</param>
      public static Product Create(string name, bool isdeleted)
      {
         return new Product(name, isdeleted);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// Unique identifier
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Unique identifier")]
      public int Id { get; set; }

      /// <summary>
      /// Indexed, Required, Max length = 255
      /// Name of Product.
      /// </summary>
      [Required]
      [MaxLength(255)]
      [StringLength(255)]
      [System.ComponentModel.Description("Name of Product.")]
      public string Name { get; set; }

      /// <summary>
      /// Max length = 1023
      /// Description of Product.
      /// </summary>
      [MaxLength(1023)]
      [StringLength(1023)]
      [System.ComponentModel.Description("Description of Product.")]
      public string Description { get; set; }

      /// <summary>
      /// Required
      /// Soft deleted flag.
      /// </summary>
      [Required]
      [System.ComponentModel.Description("Soft deleted flag.")]
      public bool IsDeleted { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      /// <summary>
      /// Collection of Processes
      /// </summary>
      [Description("Collection of Processes")]
      public virtual ICollection<global::DOS_DAL.Process> Processes { get; private set; }

   }
}

